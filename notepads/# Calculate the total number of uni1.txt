# Calculate the total number of unique schools
total_schools = schools['School ID'].nunique()

# Calculate the total number of students
total_students = students['Student ID'].nunique()

# Calculate the total budget
total_budget = schools['budget'].sum()

# Calculate the average maths score
avg_math_score = students['math_score'].mean()

# Calculate the average reading score
avg_reading_score = students['reading_score'].mean()

# Calculate the percentage of students who passed maths
passing_math = (students[students['math_score'] >= 50]['math_score'].count() / total_students) * 100

# Calculate the percentage of students who passed reading
passing_reading = (students[students['reading_score'] >= 50]['reading_score'].count() / total_students) * 100

# Calculate the percentage of students who passed both maths and reading
overall_passing = (students[(students['math_score'] >= 50) & (students['reading_score'] >= 50)]['Student ID'].count() / total_students) * 100

# Create a DataFrame to hold the LGA summary data
summary_df = pd.DataFrame({
    "Total Schools": [total_schools],
    "Total Students": [total_students],
    "Total Budget": [total_budget],
    "Average Math Score": [avg_math_score],
    "Average Reading Score": [avg_reading_score],
    "% Passing Math": [passing_math],
    "% Passing Reading": [passing_reading],
    "% Overall Passing": [overall_passing]
})

# Format the Total Budget column as a currency
summary_df['Total Budget'] = summary_df['Total Budget'].map('${:,.2f}'.format)

# Display the LGA summary DataFrame
print(summary_df)
